#!/bin/bash

bashrc-reload() {
  builtin exec bash
}

# add the given folder to PATH if it exists and is not already in PATH
pathprepend() {
    if [ -d "$1" ] && [[ ":$PATH:" != *":$1:"* ]]; then
        PATH="$1${PATH:+":$PATH"}"
    fi
}

# simple tool for finding files by SHA256
findsha256() {
  if [ "$1" = "" ] || [ "$*" = "-h" ] || [ "$*" = "--help" ]; then
    echo "Usage: findsha256 folder hash"
  else
    find $1 -type f -exec sha256sum {} \; | grep $2
    find $1 -name data.csv -exec grep -i $2 {} \; | cut -d';' -f'1 2' --output-delimiter='  '
  fi
}

# simple tool for finding files by ssdeep
findssdeep() {
  if [ "$1" = "" ] || [ "$*" = "-h" ] || [ "$*" = "--help" ]; then
    echo "Usage: findssdeep folder hash"
  else
    find $1 -type f -exec -exec ssdeep {} \; | grep -v ssdeep | cut -d',' -f1 | grep $2
    find $1 -name data.csv -exec grep -i $2 {} \; | cut -d';' -f'1 2' --output-delimiter='  '
  fi
}

# find an executable
__findexec() {
  if [ "$*" = "-h" ] || [ "$*" = "--help" ]; then
    echo "Usage: find$1 folder"
  else
    find "$3" -type f -exec file {} \; | egrep -E "$2" | cut -d':' -f1
  fi
}

# find tools for each executable format
finddotnet() { local folder=$1; __findexec 'dotnet' ": PE32\+? executable (.+?)\.Net assembly" "$folder"; }
findelf32() { local folder=$1; __findexec 'elf32' ": (set[gu]id )?ELF 32-bit " "$folder"; }
findelf64() { local folder=$1; __findexec 'elf64' ": (set[gu]id )?ELF 64-bit " "$folder"; }
findmacho32() { local folder=$1; __findexec 'macho32' ": Mach-O 32-bit " "$folder"; }
findmacho64() { local folder=$1; __findexec 'macho64' ": Mach-O 64-bit " "$folder"; }
findmachou() { local folder=$1; __findexec 'machou' ": Mach-O universal binary " "$folder"; }
findmsdos() { local folder=$1; __findexec 'msdos' ": MS-DOS executable\s*" "$folder"; }
findpe32() { local folder=$1; __findexec 'pe32' ": PE32 executable " "$folder"; }
findpe64() { local folder=$1; __findexec 'pe64' ": PE32\+ executable " "$folder"; }

# run BATS tests
run-tests() {
  if [ "$*" = "-h" ] || [ "$*" = "--help" ]; then
    echo "Usage: run-tests [folder]"
  else
    if [ "$1" = "" ]; then
      local FOLDER="tests"
    else
      local FOLDER="$1"
    fi
    for FILE in $FOLDER/*.bats; do
      bats $FILE
    done
  fi
}
